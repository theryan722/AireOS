<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPower.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>